import { useState, useCallback } from "react";
import "./App.css";
import seedrandom from "seedrandom";

function App() {
  const [showBackground, setShowBackground] = useState(false);
  const [imageResource, setImageResource] = useState(null);
  const [seed, setSeed] = useState("initial seed");
  const [imagePrompt, setImagePrompt] = useState("No image yet generated.");

  const apiToken = import.meta.env.VITE_API_TOKEN;

  const url = `https://api.picogen.io/job/list?page={pageNumber}&limit={limitNumber}`;

  const randomizer = useCallback((seed) => {
    const rng = seedrandom(seed);
    return Math.floor(rng() * 28);
  }, []);

  const imageGetter = useCallback(() => {
    setShowBackground(true);
    fetch(url, {
      method: "GET",
      headers: {
        "API-Token": apiToken,
      },
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok " + response.statusText);
        }
        return response.json();
      })
      .then((data) => {
        const filteredData = data[1]?.items.filter(
          (item) =>
            item.payload.options.prompt !==
            "A realistic scene in cinematic style of man and woman talking in night club, neon color, portrait shot"
        );

        console.log(filteredData);

        if (filteredData && filteredData.length > 0) {
          const randomValue = randomizer(seed);
          const resultData = filteredData[randomValue]?.result;
          const resultPrompt = filteredData[randomValue]?.payload.options.prompt;
          if (resultData) {
            setImageResource(resultData);
            setImagePrompt(resultPrompt);
            console.log(resultPrompt);
          } else {
            console.error("Random value is out of range:", randomValue);
          }
        }
      })
      .catch((error) => console.error("Error:", error));
  }, [apiToken, randomizer, seed, url]);

  const refresh = () => {
    setSeed(Date.now().toString());
    setShowBackground(false);
    setImageResource(null);
  };

  return (
    <>
      <div
        className='content-container'
        style={{
          backgroundImage: `url(${imageResource})`,
          backgroundSize: "cover",
          height: "100vh",
          width: "100%",
          display: "flex",
          justifyContent: "center",
          alignContent: "center",
          alignItems: "center",
          flexDirection: "column",
        }}
      >
        <h1 className='title'>AI Website Background Generator </h1>
        <div className='prompt'>
          <h3>Prompt Used:</h3>
          <p>{imagePrompt}</p>
        </div>

        <div className='card'>
          <button onClick={imageGetter}>AI generated Background</button>
          {showBackground}
          <button onClick={refresh}>Refresh</button>

          {imageResource && (
            <a href={imageResource} download='generated-image.png'>
              <button>Save Image</button>
            </a>
          )}
        </div>
        <p className='read'>
          Images were generated by Juan Espinel with the PicGen API
        </p>
      </div>
    </>
  );
}

export default App;
